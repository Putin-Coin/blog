<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Philip Walton</title>
 <link href="http://philipwalton.com/atom.xml" rel="self"/>
 <link href="http://philipwalton.com/"/>
 <updated>2013-06-12T09:03:52-07:00</updated>
 <id>http://philipwalton.com/</id>
 <author>
   <name>Philip Walton</name>
   <email>philip@philipwalton.com</email>
 </author>

 
 <entry>
   <title>Introducing HTML Inspector</title>
   <link href="http://philipwalton.com/articles/introducing-html-inspector/"/>
   <updated>2013-06-11T01:22:52-07:00</updated>
   <id>http://philipwalton.com/articles/introducing-html-inspector/</id>
   
   <content type="html">HTML Inspector is a code quality tool to help you and your team write better markup. It's written in JavaScript and runs in the browser, so testing your HTML has never been easier. Like JSHint and CSSLint, HTML Inspector is completely customizable, so you can use &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/introducing-html-inspector/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>CSS: Everything is Global and How to Deal With It</title>
   <link href="http://philipwalton.com/articles/css-everything-is-global-and-how-to-deal-with-it/"/>
   <updated>2013-03-25T13:21:57-07:00</updated>
   <id>http://philipwalton.com/articles/css-everything-is-global-and-how-to-deal-with-it/</id>
   
   <content type="html">Everything in CSS is global. Every line you write has the potential to conflict with every other line. Because of this, CSS is often the hardest part of scaling any Web application or working on a development team. In my article published on the Adobe Developer Network, I discuss &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/css-everything-is-global-and-how-to-deal-with-it/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>Dynamic Selectors</title>
   <link href="http://philipwalton.com/articles/dynamic-selectors/"/>
   <updated>2013-02-20T06:22:24-08:00</updated>
   <id>http://philipwalton.com/articles/dynamic-selectors/</id>
   
   <content type="html">When creating a new CSS library or framework, developers typically take one of two approaches with component naming: the Bootstrap approach or the jQueryUI approach. Bootstrap tries to be as simple and basic as possible, calling a component exactly what it is. If something is a tooltip, why &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/dynamic-selectors/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>Defending Presentational Class Names</title>
   <link href="http://philipwalton.com/articles/defending-presentational-class-names/"/>
   <updated>2013-01-24T08:57:00-08:00</updated>
   <id>http://philipwalton.com/articles/defending-presentational-class-names/</id>
   
   <content type="html">Recently, Codrops, an online web design and development blog, published an article I wrote for them entitled: Defending Presentational Class Names. In the article I discuss the use of presentational classes, why we've historically avoided them, and how perhaps some situations might warrant their use today. I hope &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/defending-presentational-class-names/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>The Future of OOCSS: A Proposal</title>
   <link href="http://philipwalton.com/articles/the-future-of-oocss-a-proposal/"/>
   <updated>2013-01-17T03:02:16-08:00</updated>
   <id>http://philipwalton.com/articles/the-future-of-oocss-a-proposal/</id>
   
   <content type="html">In CSS we often code the same visual components over and over again &amp;mdash; even within the same project. It's embarrassing how many separate times in my career I've coded a two-column layout, or tabbed navigation, or a dropdown menu, or a popup (and the list goes on). To deal &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/the-future-of-oocss-a-proposal/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>What No One Told You About Z-Index</title>
   <link href="http://philipwalton.com/articles/what-no-one-told-you-about-z-index/"/>
   <updated>2012-12-22T13:17:39-08:00</updated>
   <id>http://philipwalton.com/articles/what-no-one-told-you-about-z-index/</id>
   
   <content type="html">The problem with z-index is that very few people understand how it really works. It's not complicated, but it if you've never taken the time to read its specification, there are almost certainly crucial aspects that you're completely unaware of. Don't believe me? Well, see if you can solve this &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/what-no-one-told-you-about-z-index/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>CSS Architecture</title>
   <link href="http://philipwalton.com/articles/css-architecture/"/>
   <updated>2012-11-16T10:04:25-08:00</updated>
   <id>http://philipwalton.com/articles/css-architecture/</id>
   
   <content type="html">To many Web developers, being good at CSS means you can take a visual mock-up and replicate it perfectly in code. You don’t use tables, and you pride yourself on using as few images as possible. If you’re really good, you use the latest and greatest techniques like media queries, transitions and transforms &amp;hellip; &lt;a rel=&quot;full-article&quot; href=&quot;http://philipwalton.com/articles/css-architecture/&quot;&gt;[more]&lt;/a&gt;</content>
 </entry>
 

</feed>